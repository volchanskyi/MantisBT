/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Ivan' at '2/27/18 10:24 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'
//apply plugin: 'aspectj'

//apply plugin: "io.qameta.allure"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

//adding Allure
configurations {
    agent
}


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    
	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:22.0'
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    //testCompile 'junit:junit:4.12'
    compile 'org.testng:testng:6.14.2'
    compile 'org.seleniumhq.selenium:selenium-java:3.10.0'
    compile 'org.hamcrest:java-hamcrest:2.0.0.0'
    //compile 'com.beust:jcommander:1.72'
    compile 'org.subethamail:subethasmtp:3.1.7'
    compile 'ru.lanwen.verbalregex:java-verbal-expressions:1.5'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'org.apache.httpcomponents:httpclient:4.5.3'
    compile 'org.apache.httpcomponents:fluent-hc:4.5.3'
    compile 'org.apache.commons:commons-lang3:3.7'
    //adding Allure
 	agent "org.aspectj:aspectjweaver:1.9.1"
// 	compile "org.aspectj:aspectjweaver:1.9.1"
    compile 'ru.yandex.qatools.allure:allure-testng-adaptor:1.5.4'
    // https://mvnrepository.com/artifact/com.google.inject/guice
    //compile group: 'com.google.inject', name: 'guice', version: '4.2.0'
    // https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin
	//compile group: 'org.apache.maven.plugins', name: 'maven-surefire-plugin', version: '2.22.0'
	//Adding HamCrest assertions
	// https://mvnrepository.com/artifact/org.hamcrest/hamcrest-all
	testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
	
}


test {
	//Run all tests
	ignoreFailures = true

	useTestNG {
		suites 'src/test/resources/testng.xml'
		//"DEFAULTGROUP" tests will be used if there is no value passed
		includeGroups(project.findProperty('testGroups') ?: 'DEFAULTGROUP')
	}
	
	if (project.hasProperty('browser')) {
	systemProperty 'browser', "${browser}"
	}
	if (project.hasProperty('platform')) {
	systemProperty 'platform', "${platform}"
	}
	if (project.hasProperty('target')) {
	systemProperty 'target', "${target}"
	}
	if (project.hasProperty('debug')) {
	systemProperty 'debug', findProperty("debug")
	}

}



test.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

/*
gradle.buildFinished { buildResult ->
    if (buildResult.failure) {
        exec {
            executable "generateReport.bat"
        }
    }
}

*/


